#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('Missing Supabase environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function fixReportTemplates() {
  console.log('ðŸ”§ Fixing report templates schema...');

  try {
    // First, let's see what templates exist
    const { data: existingTemplates, error: fetchError } = await supabase
      .from('report_templates')
      .select('*');

    if (fetchError) {
      console.error('Error fetching existing templates:', fetchError);
      return;
    }

    console.log(`Found ${existingTemplates?.length || 0} existing templates`);

    // Check if templates are missing required fields
    const templatesToFix = existingTemplates?.filter(template => 
      !template.template_content || !template.description
    ) || [];

    if (templatesToFix.length === 0) {
      console.log('âœ… All templates already have required fields');
      return;
    }

    console.log(`Found ${templatesToFix.length} templates that need fixing`);

    // Update each template with missing fields
    for (const template of templatesToFix) {
      console.log(`Updating template: ${template.name}`);
      
      const updateData = {
        description: template.description || `${template.name} - Template for inspection reports`,
        template_content: template.template_content || `<!DOCTYPE html>
<html>
<head>
    <title>{{title}}</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 20px; }
        .section { margin: 20px 0; }
        .footer { margin-top: 40px; text-align: center; font-style: italic; }
    </style>
</head>
<body>
    <div class="header">
        <h1>{{title}}</h1>
        <p>Report Generated: {{date}}</p>
    </div>
    
    <div class="section">
        <h2>Report Content</h2>
        <p>{{content}}</p>
    </div>
    
    <div class="footer">
        <p>Generated by TRIAPP</p>
    </div>
</body>
</html>`,
        is_active: template.is_active !== undefined ? template.is_active : true,
        updated_at: new Date().toISOString()
      };

      const { error: updateError } = await supabase
        .from('report_templates')
        .update(updateData)
        .eq('id', template.id);

      if (updateError) {
        console.error(`Error updating template ${template.name}:`, updateError);
      } else {
        console.log(`âœ… Updated template: ${template.name}`);
      }
    }

    // If no templates exist, create the default ones
    if (existingTemplates?.length === 0) {
      console.log('No templates found, creating default templates...');
      
      const defaultTemplates = [
        {
          name: 'Standard Inspection Report',
          description: 'A comprehensive template for detailed inspection reports',
          format: 'html',
          template_content: `<!DOCTYPE html>
<html>
<head>
    <title>{{title}}</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 20px; }
        .section { margin: 20px 0; }
        .footer { margin-top: 40px; text-align: center; font-style: italic; }
    </style>
</head>
<body>
    <div class="header">
        <h1>{{title}}</h1>
        <p>Inspection ID: {{inspection_id}}</p>
        <p>Date: {{inspection_date}}</p>
    </div>
    
    <div class="section">
        <h2>Operator Information</h2>
        <p><strong>Name:</strong> {{operator_name}}</p>
        <p><strong>Address:</strong> {{operator_address}}</p>
        <p><strong>VAT Number:</strong> {{vat_number}}</p>
    </div>
    
    <div class="section">
        <h2>Inspection Details</h2>
        <p><strong>Inspector:</strong> {{inspector_name}}</p>
        <p><strong>Status:</strong> {{inspection_status}}</p>
        <p><strong>Findings:</strong></p>
        <ul>
            {{#each findings}}
            <li>{{this}}</li>
            {{/each}}
        </ul>
    </div>
    
    <div class="footer">
        <p>{{footer}}</p>
    </div>
</body>
</html>`,
          mapping_json: {
            "title": "Technical Regulations Inspection Report",
            "sections": [
              "inspection_details",
              "operator_information", 
              "checklist_results",
              "findings",
              "notices_issued",
              "recommendations"
            ],
            "footer": "This report was generated by TRIAPP"
          },
          version: '1.0.0',
          is_default: true,
          is_active: true
        },
        {
          name: 'Executive Summary Report',
          description: 'A concise template for executive-level inspection summaries',
          format: 'html',
          template_content: `<!DOCTYPE html>
<html>
<head>
    <title>{{title}}</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 20px; }
        .section { margin: 20px 0; }
        .footer { margin-top: 40px; text-align: center; font-style: italic; }
        .risk-high { color: #d32f2f; font-weight: bold; }
        .risk-medium { color: #f57c00; font-weight: bold; }
        .risk-low { color: #388e3c; font-weight: bold; }
    </style>
</head>
<body>
    <div class="header">
        <h1>{{title}}</h1>
        <p>Executive Summary</p>
    </div>
    
    <div class="section">
        <h2>Overview</h2>
        <p>{{overview}}</p>
    </div>
    
    <div class="section">
        <h2>Key Findings</h2>
        <ul>
            {{#each key_findings}}
            <li>{{this}}</li>
            {{/each}}
        </ul>
    </div>
    
    <div class="section">
        <h2>Risk Assessment</h2>
        <p><span class="risk-{{risk_level}}">Risk Level: {{risk_level}}</span></p>
        <p>{{risk_description}}</p>
    </div>
    
    <div class="section">
        <h2>Actions Required</h2>
        <ul>
            {{#each actions_required}}
            <li>{{this}}</li>
            {{/each}}
        </ul>
    </div>
    
    <div class="footer">
        <p>{{footer}}</p>
    </div>
</body>
</html>`,
          mapping_json: {
            "title": "Inspection Executive Summary",
            "sections": [
              "overview",
              "key_findings",
              "risk_assessment",
              "actions_required"
            ],
            "footer": "Executive summary generated by TRIAPP"
          },
          version: '1.0.0',
          is_default: false,
          is_active: true
        }
      ];

      const { error: insertError } = await supabase
        .from('report_templates')
        .insert(defaultTemplates);

      if (insertError) {
        console.error('Error creating default templates:', insertError);
      } else {
        console.log('âœ… Created default templates');
      }
    }

    console.log('ðŸŽ‰ Report templates fix completed!');

  } catch (error) {
    console.error('Error fixing report templates:', error);
  }
}

fixReportTemplates();
